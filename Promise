Promise:

A promise is a special javascript object that represents the eventual completion (or failure) of an asynchronous operation

1)Three States

1)Pending: The initial state , the promise is still waiting for the operation to finish
2)Fulfilled: The operation completed Successfully
3)Rejected: The operation failed

Exp:
To create a promise new Promise();
The promise constructor takes a function with two parameters
resolve -- to mark as the promise is successful
reject -- to mark it as failed

Handling:
.then() method is called when the promise is fulfilled
It receives the result from the resolve()
.catch() method is called when promise is rejected
Ex:
let myPromise = new Promise((resolve , reject)=>{
let success = true
if(success){
resolve("The OPeration was successful")
}else{
reject("The operation failed")
}
});

Changing Promises:
--You can have chain multiple , then()

Ex:
let promise = new Promise((resolve , reject) =>{
resolve(5);
})

promise
.then(result=>{
console.log(result)
return result*2
})
.then(result=>{
consoe.log(result)
return result + 3
})
.then(result=>{
console.log(result)
})
.catch(error=>{
console.log(error)
})


Settimeout:
----------
        let promise = new Promise((resolve , reject)=>{
            resolve(5);
        })

.then(() => {
    console.log('wait for 5 seconds');
    return new Promise(function(resolve, reject) { 
        setTimeout(() => {
            console.log('5 seconds Timer expired');
            resolve();
        }, 5000)
    });
})
.then(() => {
    console.log('promise resolved');
})
.catch(error=>{
    console.log(error)
})


